#!/bin/bash
# Copyright (c) 2019, Sylabs Inc. All rights reserved.

# SyBuilder Action allow users to leverage  https://cloud.sylabs.io builder and library to
# Build images on a merge event, with a commit tag
#
# Reproducible science!!
set -e

if [[ -z "$SYLABS_TOKEN" ]]; then
	echo "Set the SYLABS_TOKEN env variable."
	exit 1
fi

if [[ -z "$SYLABS_USER" ]]; then
	echo "Set the SYLABS_USER env variable."
	exit 1
fi

if [[ -z "$SYLABS_PROJECT" ]]; then
	echo "Set the SYLABS_PROJECT env variable."
	exit 1
fi

if [[ -z "$LIBRARY_IMAGE" ]]; then
	echo "Set the LIBRARY_IMAGE env variable."
	exit 1
fi

if [[ -z "$GITHUB_REPOSITORY" ]]; then
	echo "Set the GITHUB_REPOSITORY env variable."
	exit 1
fi

if [[ ! -f ".sybuilder/def.file" ]]; then
	echo "No definition list file found"
	exit 1
fi
DEF_FILE=".sybuilder/def.file"

main(){
	action=$(jq --raw-output .action "$GITHUB_EVENT_PATH")
	merged=$(jq --raw-output .pull_request.merged "$GITHUB_EVENT_PATH")
	ref=$(jq --raw-output .pull_request.head.ref "$GITHUB_EVENT_PATH")
	TAG=$(jq --raw-output .merge_commit_sha "$GITHUB_EVENT_PATH")
	REPO_OWNER=$(jq --raw-output .pull_request.head.repo.owner.login "$GITHUB_EVENT_PATH")
	REPO_NAME=$(jq --raw-output .pull_request.head.repo.name "$GITHUB_EVENT_PATH")

echo -e "Merge commit sha: $TAG\n"

## Build via Sylabs Cloud builder , and store on a defined library path
if [[ "$action" == "closed" ]] && [[ "$merged" == "true" ]]; then
	build_output=$(singularity build --remote --detached library://${SYLABS_USER}/${SYLABS_PROJECT}/${LIBRARY_IMAGE}:${TAG} ${DEF_FILE})
	success=$?
	if [ "$success" -eq 0 ]; then
		echo -e "$build_output"
		exit 0
	else
		echo -e "$build_output"
		exit 1
	fi
else
	echo "Not a merge event"
fi
}

main "$@"
